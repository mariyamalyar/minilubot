main.py

import telebot

from config import *
from extensions import Converter, APIException

bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=['start', 'help'])
def start(message: telebot.types.Message):
    text = "Чтобы начать работу введите команду боту в следующем формате: <имя валюты,цену которой хочет узнать>\
    <имя валюты, в которой надо узнать цену первой валюты> <количество первой валюты>\nУвидеть список всех доступных валют: /values"
    bot.reply_to(message, text)

@bot.message_handler(commands=['values'])
def values(message: telebot.types.Message):
    text = 'Доступные валюты:'
    for i in exchanges.keys():
        text = '\n'.join((text, i))
    bot.reply_to(message, text)

@bot.message_handler(content_types=['text'])
def converter(message: telebot.types.Message):
    try:
        get_price = Converter.get_price(base, quote, amount)
    except ValueError as e:
        bot.reply_to(message, 'Неверное количество параметров!')

    try:
        get_price = Converter.get_price(base, quote, amount)
        bot.reply_to(message, f"Цена {amount} {base} в {quote} : {get_price}")
    except APIException as e:
        bot.reply_to(message, f"Ошибка в команде:\n{e}")

bot.polling()


config.py 

exchanges = {
    'доллар': 'USD',
    'евро': 'EUR',
    'рубль': 'RUB'
}

TOKEN = "5732499062:AAG7MyFqKYt9efBWsCxNTqbJh4SVh-N8QKg"


extensions.py

import requests
import json
from config import exchanges

class APIException(Exception):
    pass

class Converter:
    @staticmethod
    def get_price(base, quote, amount):
        try:
            base_key = exchanges[base.lower()]
        except KeyError:
            return APIException(f"Валюта {base} не найдена!")

        try:
            quote_key = exchanges[quote.lower()]
        except KeyError:
            raise APIException(f"Валюта {quote} не найдена!")

        if base_key == quote_key:
            raise APIException(f'Невозможно перевести одинаковые валюты {base}!')

        try:
            amount = float(amount.replace(",", "."))
        except ValueError:
            raise APIException(f'Не удалось обработать количество {amount}!')

        r = requests.get(f"https://api.exchangeratesapi.io/latest?base={base_key}&symbols={quote_key}")
        resp = json.loads(r.content)
        get_price = resp['rates'][quote_key] * float(amount)
        return round(get_price, 2)
